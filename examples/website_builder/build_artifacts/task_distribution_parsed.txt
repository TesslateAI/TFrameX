<memory>
The Clown Website Project is a single-page website with a playful, circus-themed design. Key shared context includes:

**Design Language**:
- **Color Palette**: Primary (Bright Red #FF3B30, Electric Blue #00BFFF), Secondary (Yellow #FFD700, White #FFFFFF), Accent (Purple #A020F0)
- **Typography**: Headings use "Comic Sans MS" (playful, bold), body text uses "Arial" (clean, readable)
- **UI Components**: Animated navigation bar with hover effects, circular "Click Me" buttons with clown face icons, responsive grid layout for gallery, modal popup for contact form
- **Responsiveness**: Mobile-first approach using CSS Grid/Flexbox, media queries for tablets/desktops, touch-friendly buttons (minimum 48x48px)

**Frameworks/Libraries**:
- CSS: Normalize.css (CDN: https://cdnjs.com/normalize), Google Fonts for "Comic Sans MS"
- JavaScript: Vanilla JS for form validation and animations, Fancybox library for lightbox
- Build Tools: Optional Webpack for asset optimization

**File Structure**:
- HTML files: index.html, about.html, services.html, contact.html, gallery.html
- Assets: images (clown1.jpg, clown2.jpg, logo.png, background.jpg), icons (facebook.svg, instagram.svg, email.svg), css (styles.css, responsive.css), js (main.js, form.js), fonts (clown-font.woff)

**Global Requirements**:
- Accessibility: Alt text for images, ARIA labels, keyboard navigation
- Performance: Image compression (TinyPNG), lazy loading, minified CSS/JS
- SEO: Meta tags, proper heading hierarchy (H1-H3), structured data for events
- Security: HTTPS, client/server-side form validation
- Cross-Browser: Test in Chrome, Firefox, Safari, Edge; use vendor prefixes
- Animation Guidelines: CSS transitions for hover effects, avoid excessive animations
- Mobile Optimization: Tap targets >48px, simplified navigation (hamburger menu)
</memory>

<prompt filename="index.html">
Generate the complete HTML structure for the homepage (index.html). Use semantic HTML5 tags with the following structure:
1. `<header>` with a navigation bar containing:
   - Logo (img src="assets/images/logo.png" alt="Clown Logo")
   - Navigation links to about.html, services.html, gallery.html
   - "Book Show" and "See Gallery" CTA buttons (circular, clown face icon from assets/icons)
2. `<main>` with:
   - Hero section: Animated text "Welcome to the Circus!" (using CSS animation from memory)
   - Featured events slider (carousel component with prev/next buttons)
   - Call-to-action section with "Book Show" and "See Gallery" buttons
3. `<footer>` with copyright info and social media links (icons from assets/icons)
Include links to CSS (assets/css/styles.css, assets/css/responsive.css) and JS (assets/js/main.js). Use Google Fonts for "Comic Sans MS" and Normalize.css via CDN. Ensure all images have alt text and ARIA attributes.
</prompt>

<prompt filename="about.html">
Generate the HTML structure for the About page (about.html). Use semantic tags with:
1. `<header>` with navigation bar (same as index.html)
2. `<main>` containing:
   - Team bios section with:
     - 3 profile cards (image, name, bio) using grid layout
     - Images from assets/images/clown1.jpg, clown2.jpg
   - History timeline (animated vertical line with date markers)
   - Mission statement section with bold heading
3. `<footer>` with same structure as index.html
Link to CSS/JS files and ensure accessibility attributes. Use "Comic Sans MS" for headings and "Arial" for body text.
</prompt>

<prompt filename="services.html">
Generate the HTML structure for the Services page (services.html). Include:
1. Navigation bar (same as index.html)
2. `<main>` with:
   - Service cards section:
     - 3 cards for Birthday Parties, Corporate Events, Workshops
     - Each card has icon (from assets/icons), title, description
   - Pricing table with 3 tiers (Basic, Premium, VIP) including:
     - Price, features list, "Choose Plan" button
3. `<footer>` with same structure as index.html
Use CSS Grid for layout, link to styles.css, and ensure proper font styling.
</prompt>

<prompt filename="contact.html">
Generate the HTML structure for the Contact page (contact.html). Include:
1. Navigation bar (same as index.html)
2. `<main>` with:
   - Embedded Google Map (iframe with src from Google Maps)
   - Contact form with:
     - Name (text input)
     - Email (email input)
     - Message (textarea)
     - Submit button (circular, clown face icon)
   - Social media links (icons from assets/icons)
3. `<footer>` with same structure as index.html
Link to form.js for validation, include required attributes for form fields, and ensure accessibility labels.
</prompt>

<prompt filename="gallery.html">
Generate the HTML structure for the Gallery page (gallery.html). Include:
1. Navigation bar (same as index.html)
2. `<main>` with:
   - Filterable image grid (buttons for "All", "Birthday", "Corporate", "Workshops")
   - Image grid using CSS Grid with 3-column layout on desktop
   - Lightbox viewer for full-size images (using Fancybox)
3. `<footer>` with same structure as index.html
Link to Fancybox CSS/JS, include image placeholders from assets/images, and ensure proper alt text.
</prompt>

<prompt filename="assets/css/styles.css">
Generate CSS rules for the website based on the plan. Define:
1. Base styles:
   - Reset margin/padding, set font-family to "Arial" for body
   - Color variables for palette (use CSS variables)
2. Typography:
   - Headings (h1-h3) using "Comic Sans MS" with specific font weights
   - Body text with line-height and spacing
3. Components:
   - Navigation bar with hover effects (background color change)
   - Circular buttons with clown face icons (background-image from assets/icons)
   - Responsive grid layout for gallery (grid-template-columns)
   - Modal popup for contact form (hidden by default, display on button click)
4. Animations:
   - Hero text animation (fade-in or slide-in)
   - Button hover effects (scale, color transition)
Include media queries for tablet/desktop layouts and ensure touch-friendly button sizes.
</prompt>

<prompt filename="assets/css/responsive.css">
Generate responsive CSS rules. Implement:
1. Mobile-first approach:
   - Navigation bar collapses into hamburger menu on small screens
   - Grid layout changes to 1-column on mobile
2. Media queries for:
   - Tablets (min-width 768px): 2-column grid
   - Desktops (min-width 1024px): 3-column grid
3. Touch targets:
   - Minimum 48x48px for all interactive elements
   - Increased padding for buttons
4. Image responsiveness:
   - Max-width 100% for all images
   - Lazy loading for non-critical assets
Ensure all styles are compatible with cross-browser testing requirements.
</prompt>

<prompt filename="assets/js/main.js">
Generate JavaScript for interactive elements. Implement:
1. Navigation:
   - Hamburger menu toggle (show/hide mobile nav)
   - Scrollspy for active navigation link
2. Animations:
   - Hero text animation on page load
   - Button hover effects (CSS transitions)
3. Gallery:
   - Filterable image grid (show/hide based on category)
   - Lightbox initialization with Fancybox
4. Form:
   - Modal popup trigger for contact form
   - Mobile menu toggle functionality
Use Vanilla JS without frameworks, ensure compatibility with cross-browser requirements.
</prompt>

<prompt filename="assets/js/form.js">
Generate JavaScript for contact form validation. Implement:
1. Form validation:
   - Check for non-empty fields
   - Validate email format
   - Show error messages (hidden by default)
2. Submit handler:
   - Prevent default form submission
   - Show success message on valid submission
3. Accessibility:
   - ARIA attributes for error/success messages
   - Keyboard navigation support
Include comments for each function and ensure compatibility with server-side validation.
</prompt>